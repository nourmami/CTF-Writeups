from Crypto.Util.number import *
from gmpy2 import iroot
from numpy import poly1d

from sympy import *
x = symbols('x')
from sympy import roots, solve_poly_system

ch="0x1fb783197ed3a6a6a56de551bdddfbed3efdaa47eb5955abdd4fb1aeba0b4948e32fd81002574b853f4408078d052d9789018b5f2515fc1b8b32489e98ef8ab8e759073c659c31c64387a1b416ff5c8a482b25c87c7a2e739be3742f3cbd34ff7b057577f16796e36397c8935a81d3c338aad7a0346b501dba7368cd2af6db7ce30966efc62cf4c748fa538fdbfdafc1910d7404b8c497281c767ed82444502264ca273a05a9b4511b433d86290e3e1196bd6a804eafc9c0cdce9c450f861a37f3ee4f1f284959987705d91c915c626e0fe64cd424c8c9e194b98b16716cd33535b0536d7f241badec790244ad4388f25f177634deb0e79fa3d007cb6f93c05b"
c=int(ch,16)
eh="0x10001"
e=int(eh,16)
nh="0xacb3965c22b0451af2e91d0c808d3ad356f11d6183d8bd38279e4c5183d7e99e2fa195b82d18f780ea805d5daeb2c9396095c47ceaf9262fc6bbfe79800bf80668f5ce0cf3cb7032577eea4fe6ec091b1a3018adaf2521470a47cde7cec1259f49a0bacb438da46607672eb7cafddb67584186cd4ec43b585cb8c2f0a4b0a33ddffd67292ab5ed3018559b06216d36887a415ad6e18bae63fb0c27dcf26eb38be50e7e055ad0cb0055a2b656a01a71091a5ee074532e92cea05b57ffd52551137ea294d784d0c91a1e495a78d395dbec488f1c5c02a17e93294d9b622290cfa7c4207413152a0dd6f94028c4013cbb79193410645a204c0beda219fd09e7b3b9"
n=int(nh,16)
kh="0x3ca894e363805a23bd469a0f837c4a6997dc90dd1157c5b996524979270e30efbe0467e982e613f5d39e4f606b9961732820d00c234be475e19082b108d62101ff17809c104ab25fd26d6e8828308f0eae5d9bb0565fc7dc5ffc622d7e552d7f9ff0000f6434780547acc6b32a5e8b6cfe99d3f1801f5027f5686168d10bdcbf5b5bbd322c4c4644201f00cb89341d08548cfd20e875fb0ccfe5f5bc78a2c6ac1f99148cbebfd28fe6ba8a573683d16c355838907b579189aa6d3d1c72ef912ea7c2ad91a0a0359fbe4d5a4e2ef7a65f39f979f287389ebe08f1f97bcf6d8164ed62063c607898abbf43bd866162b4527e220504402a2f533c1db6dc5e5d23ffbb079989317ce584260b344b9ed6f4589651c101b1fa98de7e7888b494ea4efb2c7ee0aefc9295d23f5c522e1f4868140f42b999a7ea2274d6632977978e755d2e8f92d317839165d33c0438f2857feced8ebe1e561cee5e22374d68632c458a159d8ea2984a9db1e0d44f4f4a79d63d24ee17dbb5aa3d980a516f2a9484cec0"
k=int(kh,16)
print(solve(x**3 + 3*n*x - k, x))
k1=20907261736394968797840480736915784034706824469558249169521504088330795830683697248203907230128342400664399005368832519947473898789802624823114584254601930327853536302427761656779359909638106648493666744420932285551229780523792701176593941908763445424778191456968516970148138892302681347267664773800829652032

#p = poly1d([1,0,3*n,-1*k])
#roots1 = p.roots
#k1=p-q
k2=int(iroot((k1**2)+(4*n),2)[0])
phi=n-k2+1
d = inverse(e,phi)
m = pow(c,d,n)
print(long_to_bytes(m))